from base import RulesBase
from shadycompass.config import ToolCategory
from shadycompass.facts import ScanNeeded, ScanPresent, CVE
from tests.tests import assertFactIn, assertFactNotIn


class CveExploitSearchTest(RulesBase):
    def __init__(self, methodName: str = ...):
        super().__init__(['/dev/null'], methodName)

    def test_cve_exploit_search_no_targets(self):
        assertFactNotIn(ScanNeeded(category=ToolCategory.cve_exploit_search), self.engine)

    def test_cve_exploit_search_one_target(self):
        cve1 = CVE(cve='CVE-1970-99999', addr='10.1.1.1', port=53)
        self.engine.declare(cve1)
        self.engine.run()
        assertFactNotIn(ScanNeeded(category=ToolCategory.cve_exploit_search, addr=ScanNeeded.ANY), self.engine)
        assertFactIn(ScanNeeded(category=ToolCategory.cve_exploit_search, addr='10.1.1.1', port=53, cve=cve1.get_cve()),
                     self.engine)

    def test_cve_exploit_search_two_targets(self):
        cve1 = CVE(cve='CVE-1970-99999', addr='10.1.1.1', port=53)
        cve2 = CVE(cve='CVE-1970-99999', addr='10.1.1.2', port=53)
        self.engine.declare(cve1)
        self.engine.declare(cve2)
        self.engine.run()
        assertFactNotIn(ScanNeeded(category=ToolCategory.cve_exploit_search, addr=ScanNeeded.ANY), self.engine)
        assertFactIn(ScanNeeded(category=ToolCategory.cve_exploit_search, addr='10.1.1.1', port=53, cve=cve1.get_cve()),
                     self.engine)
        assertFactIn(ScanNeeded(category=ToolCategory.cve_exploit_search, addr='10.1.1.2', port=53, cve=cve2.get_cve()),
                     self.engine)

    def test_cve_exploit_search_present1(self):
        cve1 = CVE(cve='CVE-1970-99999', addr='10.1.1.1', port=53)
        self.engine.declare(cve1)
        self.engine.declare(
            ScanPresent(category=ToolCategory.cve_exploit_search, name='sploitscan', addr='10.1.1.1', port=53,
                        cve=cve1.get_cve()))
        self.engine.run()
        assertFactNotIn(ScanNeeded(category=ToolCategory.cve_exploit_search, addr=ScanNeeded.ANY), self.engine)
        assertFactNotIn(ScanNeeded(category=ToolCategory.cve_exploit_search, addr='10.1.1.1', port=53), self.engine)

    def test_cve_exploit_search_present2(self):
        cve1 = CVE(cve='CVE-1970-99999', addr='10.1.1.1', port=53)
        self.engine.declare(cve1)
        self.engine.run()
        self.engine.declare(
            ScanPresent(category=ToolCategory.cve_exploit_search, name='sploitscan', addr='10.1.1.1', port=53,
                        cve=cve1.get_cve()))
        self.engine.run()
        assertFactNotIn(ScanNeeded(category=ToolCategory.cve_exploit_search, addr=ScanNeeded.ANY), self.engine)
        assertFactNotIn(ScanNeeded(category=ToolCategory.cve_exploit_search, addr='10.1.1.1', port=53), self.engine)
